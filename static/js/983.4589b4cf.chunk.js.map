{"version":3,"file":"static/js/983.4589b4cf.chunk.js","mappings":"gOAiCA,UA3BA,WACE,IAAMA,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,IAAD,CACEC,cAAc,SACdC,eAAe,SACfC,WAAW,SACXC,KAAK,SACLC,EAAE,QACFC,EAAE,SACFC,EAAE,YACFC,GAAG,cARL,UAUE,SAAC,IAAD,CAAMC,GAAG,IAAIC,MAAO,CAAEC,KAAMZ,GAA5B,UACIF,IACA,SAAC,KAAD,UACGH,IAAS,UAAC,IAAD,iDAA0CA,UAM/D,C,gIC/BM,IAAMkB,EAAW,SAAAF,GAAK,OAAIA,EAAMG,UAAUC,MAAMC,KAA1B,EAChBjB,EAAe,SAAAY,GAAK,OAAIA,EAAMG,UAAUC,MAAMjB,SAA1B,EACpBD,EAAW,SAAAc,GAAK,OAAIA,EAAMG,UAAUC,MAAMpB,KAA1B,EAChBsB,EAAmB,SAAAN,GAAK,OAAIA,EAAMG,UAAUI,aAApB,C,4KCGjCC,GAAOC,EAAAA,EAAAA,IAAW,SAAeC,EAAOC,GAC1C,IAAQC,EAAkEF,EAAlEE,UAAWC,EAAuDH,EAAvDG,MAAOC,EAAgDJ,EAAhDI,QAASC,EAAuCL,EAAvCK,KAAMC,EAAiCN,EAAjCM,MAAOC,EAA0BP,EAA1BO,KAAMC,EAAoBR,EAApBQ,OAAWC,GAAjE,OAA0ET,EAA1E,GACMU,EAAS,CACbC,QAAS,OACT9B,cAAeqB,EACfnB,WAAYoB,EACZrB,eAAgBsB,EAChBQ,SAAUP,EACVQ,UAAWP,EACXQ,SAAUP,EACVQ,WAAYP,GAEd,OAAuBQ,EAAAA,EAAAA,KAAIC,EAAAA,EAAAA,KAAD,QAAehB,IAAAA,EAAKiB,MAAOR,GAAWD,GACjE,IACDX,EAAKqB,YAAc,M,kMCVfC,GAAOrB,EAAAA,EAAAA,IAAW,SAAeC,EAAOC,GAC1C,IAAMS,GAASW,EAAAA,EAAAA,IAAe,OAAQrB,GACtC,GAA0DsB,EAAAA,EAAAA,IAAiBtB,GAA1BS,GAAjD,EAAQc,UAAR,EAAmBpB,MAAnB,EAA0BqB,WAA1B,EAAsCC,QAAtC,aACMC,GAAeC,EAAAA,EAAAA,IAAQ,CAC3BC,UAAW5B,EAAMG,MACjB0B,eAAgB7B,EAAMwB,WACtBM,cAAe9B,EAAMyB,SAEvB,OAAuBT,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,GADwB,QAAC,gBAGvBhB,IAAAA,EACAsB,WAAWQ,EAAAA,EAAAA,IAAG,cAAe/B,EAAMuB,YAChCG,GACAjB,GANmB,IAOtBS,MAAOR,IAGZ,IACDU,EAAKD,YAAc,M","sources":["pages/HomePage.jsx","redux/selectors.js","../node_modules/@chakra-ui/layout/dist/chunk-MPFPK3CX.mjs","../node_modules/@chakra-ui/layout/dist/chunk-P74GIWPW.mjs"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { Box, Flex, Text, Link } from '@chakra-ui/react';\nimport { getError, getIsLoading } from 'redux/selectors';\n\nfunction HomePage() {\n  const error = useSelector(getError);\n  const isLoading = useSelector(getIsLoading);\n  const location = useLocation();\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      maxW=\"1280px\"\n      h=\"100vh\"\n      m=\"0 auto\"\n      p=\"60px 30px\"\n      bg=\"accentColor\"\n    >\n      <Link to=\"/\" state={{ from: location }}>\n        {!isLoading && (\n          <Box>\n            {error && <Text>Some error occured... With message {error}</Text>}\n          </Box>\n        )}\n      </Link>\n    </Flex>\n  );\n}\n\nexport default HomePage;\n","export const getUsers = state => state.usersData.users.items;\nexport const getIsLoading = state => state.usersData.users.isLoading;\nexport const getError = state => state.usersData.users.error;\nexport const getFollowedUsers = state => state.usersData.followedUsers;\n","// src/flex.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Flex = forwardRef(function Flex2(props, ref) {\n  const { direction, align, justify, wrap, basis, grow, shrink, ...rest } = props;\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nFlex.displayName = \"Flex\";\n\nexport {\n  Flex\n};\n","// src/text.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(props);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */ jsx(\n    chakra.p,\n    {\n      ref,\n      className: cx(\"chakra-text\", props.className),\n      ...aliasedProps,\n      ...rest,\n      __css: styles\n    }\n  );\n});\nText.displayName = \"Text\";\n\nexport {\n  Text\n};\n"],"names":["error","useSelector","getError","isLoading","getIsLoading","location","useLocation","flexDirection","justifyContent","alignItems","maxW","h","m","p","bg","to","state","from","getUsers","usersData","users","items","getFollowedUsers","followedUsers","Flex","forwardRef","props","ref","direction","align","justify","wrap","basis","grow","shrink","rest","styles","display","flexWrap","flexBasis","flexGrow","flexShrink","jsx","chakra","__css","displayName","Text","useStyleConfig","omitThemingProps","className","decoration","casing","aliasedProps","compact","textAlign","textDecoration","textTransform","cx"],"sourceRoot":""}